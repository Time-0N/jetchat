<div class="friends-container">
  <header class="page-header">
    <h1>My Friends</h1>
    <p>You have <%= @friends.count %> friends</p>
  </header>

  <% if @friends.any? %>
    <div class="friends-grid">
      <% @friends.each do |friend| %>
        <div class="friend-card">
          <div class="friend-info">
            <h3><%= friend.name %></h3>
            <p class="friend-email"><%= friend.email %></p>
            <% if @friendships_data[friend.id] %>
              <p class="friend-since">Friends since <%= @friendships_data[friend.id].became_friends_at.strftime("%B %Y") %></p>
            <% end %>
          </div>

          <div class="friend-actions">
            <button class="btn btn-primary" data-action="start-chat" data-friend-id="<%= friend.id %>">
              💬 Chat
            </button>
            <button class="btn btn-secondary" data-action="view-profile" data-friend-id="<%= friend.id %>">
              👤 Profile
            </button>
            <button class="btn btn-danger btn-sm" data-action="unfriend" data-friend-id="<%= friend.id %>">
              ❌ Unfriend
            </button>
          </div>
        </div>
      <% end %>
    </div>
  <% else %>
    <div class="empty-state">
      <div class="empty-icon">👥</div>
      <h3>No friends yet</h3>
      <p>Start by discovering people and sending friend requests!</p>
      <div class="empty-actions">
        <%= link_to "Discover People", discover_friends_path, class: "btn btn-primary" %>
      </div>
    </div>
  <% end %>

  <div class="page-actions">
    <%= link_to "Back to Dashboard", dashboard_path, class: "btn btn-secondary" %>
  </div>

</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const friendsContainer = document.querySelector('.friends-container');

    if (friendsContainer) {
      friendsContainer.addEventListener('click', function(e) {
        const button = e.target.closest('[data-action]');
        if (!button) return;

        const action = button.dataset.action;
        const friendId = parseInt(button.dataset.friendId);

        if (action === 'start-chat') {
          startChat(friendId);
        } else if (action === 'view-profile') {
          viewProfile(friendId);
        } else if (action === 'unfriend') {
          unfriendUser(friendId);
        }
      });
    }

    function startChat(friendId) {
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

      fetch(`/chat_rooms/private/${friendId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': csrfToken,
          'Accept': 'application/json'
        }
      })
        .then(response => response.json())
        .then(data => {
          if (data.redirect_url) {
            window.location.href = data.redirect_url;
          } else if (data.error) {
            alert(data.error);
          }
        })
        .catch(error => {
          console.error('Error starting chat:', error);
          alert('Failed to start chat. Please try again.');
        });
    }

    function viewProfile(friendId) {
      // TODO: Implement profile view
      alert('Profile view coming soon!');
    }

    function unfriendUser(friendId) {
      if (!confirm('Are you sure you want to remove this friend? This will also delete your chat history.')) {
        return;
      }

      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

      fetch(`/friends/${friendId}/unfriend`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': csrfToken,
          'Accept': 'application/json'
        }
      })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            // Remove the friend card from the page
            const friendCard = document.querySelector(`[data-friend-id="${friendId}"]`).closest('.friend-card');
            friendCard.remove();

            // Update friends count if visible
            const friendCountElement = document.querySelector('header p');
            if (friendCountElement && friendCountElement.textContent.includes('friends')) {
              const currentCount = parseInt(friendCountElement.textContent.match(/\d+/)[0]);
              friendCountElement.textContent = `You have ${currentCount - 1} friends`;
            }

            alert('Friend removed successfully');
          } else {
            alert(data.message || 'Failed to remove friend');
          }
        })
        .catch(error => {
          console.error('Error removing friend:', error);
          alert('Failed to remove friend. Please try again.');
        });
    }
  });
</script>